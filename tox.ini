[tox]
envlist = pytest-fast, lint, mypy

[common]
deps = 
    -rrequirements.txt
    # the following should be in a dev-requirements.txt file and/or test-requirements.txt file
    -rdev-requirements.txt
    -rtest-requirements.txt
    # or you can uncomment the following lines and remove the above 2 lines
    # ruff
    # pytest
    # pytest-cov
    # pytest-xdist
    # pytest-mock
    # mypy
    # tox-uv  # for MUCH faster env creation and switching

# common variables for testenvs file/directory targets
linting_target_files = .
unit_test_files = tests 
integration_test_files = tests/integration_tests

[testenv]
description = Set up the environment with dependencies from pyproject.toml
requires = tox>=4.0
package = wheel
deps = 
    {[common]deps}
commands =
    {envpython} -m pytest {posargs:{[common]unit_test_files}}

# alias to default testenv
[testenv:pytest]
description = "Run tests with pytest."
deps = {[common]deps}
commands = {[testenv]commands}

[testenv:pytest-fast]
description = "Run tests in parallel with pytest-xdist to speed up test execution time."
deps = {[common]deps}
commands = 
    {envpython} -m pytest -n auto {posargs:{[common]unit_test_files}}

[testenv:integration-tests]
description = "Run integration tests with pytest."
deps = {[common]deps}
commands = 
    {envpython} -m pytest {posargs:{[common]integration_test_files}}

[testenv:integration-tests-fast]
description = "Run integration tests in parallel with pytest-xdist to speed up test execution time."
deps = {[common]deps}
commands = 
    {envpython} -m pytest -n auto {posargs:{[common]integration_test_files}}

[testenv:lint]
deps = {[common]deps}
description = "Checks linting against Python files"
commands = 
    {envpython} -m ruff check -- {posargs:{[common]linting_target_files}}

[testenv:fix]
deps = {[common]deps}
description = "Automatically formats and fixes any auto-fixable linting errors"
commands = 
    {envpython} -m ruff format -- {posargs:{[common]linting_target_files}}
    {envpython} -m ruff check --fix {posargs:{[common]linting_target_files}}

[testenv:fix-unsafe]
description = "Automatically formats and fixes any auto-fixable and unsafe linting errors"
deps = {[common]deps}
commands = 
    {envpython} -m ruff format -- {posargs:{[common]linting_target_files}}
    {envpython} -m ruff check --fix --unsafe-fixes {posargs:{[common]linting_target_files}}

[testenv:mypy]
description = "Run mypy static type checking"
deps = {[common]deps}
commands = 
    {envpython} -m mypy {posargs:{[common]linting_target_files}}

[testenv:coverage-html]
description = "Generate HTML coverage report from the most recent pytest run"
deps = {[common]deps}
commands = coverage html -i

[testenv:coverage-report]
description = "Print coverage report table from the most recent pytest run to the terminal"
deps = {[common]deps}
commands = coverage report -i
